updateR()
q()
q()
setwd("~/GitHub/abracadabra/patrick/")
metadata <- read.delim("~/GitHub/abracadabra/data/map/temp_map.txt",
header=T,
sep='\t',
check.names=F,
comment='')
View(metadata)
otu <- read.table("~/GitHub/abracadabra/data/processed_tax/taxonomy_counts_s.txt",
comment="",
header=TRUE,
sep="\t",
as.is=TRUE,
check.names=F,
row=1)
View(otu)
level = 6 # to go to genus level
names_split <- strsplit(rownames(otu), ";")
View(names_split)
# code abby supplied to make this work without Tonya's complicated version
# so skip from the collapse part here directly to plotting
otustrings <- sapply(names_split,function(x)paste(x[1:level],collapse = ";"))
otu_L2 <- rowsum(otu,otustrings)
View(otu_L2)
# check counts per species before filtering
range(rowSums(otu_L2))
# what counts are in each person?
range(colSums(otu_L2))
# let's normalize our table!
# Divide each person's species count by the total counts for that person
otu_L2_ra <- sweep(otu_L2, 2, colSums(otu_L2), "/")
colSums(otu_L2_ra)
View(otu_L2_ra)
# renormalize for plottin
otu_L2_limited_ra <- sweep(otu_L2_limited, 2, colSums(otu_L2_limited), "/")
library(reshape2)
otu_L2_limited_ra$Genus <- rownames(otu_L2_limited_ra)
# renormalize for plottin
otu_L2_limited_ra <- sweep(otu_L2_limited, 2, colSums(otu_L2_limited), "/")
#Next up, drop species with low mean relative abundance
otu_L2_limited <- otu_L2[rowMeans(otu_L2_ra)>0.001,]
rowMeans(otu_L2_limited)
# renormalize for plottin
otu_L2_limited_ra <- sweep(otu_L2_limited, 2, colSums(otu_L2_limited), "/")
library(reshape2)
otu_L2_limited_ra$Genus <- rownames(otu_L2_limited_ra)
melted_otu <- melt(otu_L2_limited_ra)
colnames(melted_otu) <- c("Taxa","SampleID","RelativeAbundance")
#plotting
library(ggplot2)
ggplot(melted_otu,
aes(x = SampleID,
y = RelativeAbundance,
fill= Taxa)) +
geom_bar(stat = "identity",
position="fill") +
theme(legend.position ="none")
scale_x_discrete(labels = NULL)
View(otu_L2_limited_ra)
#set working directory to where the .txt file is (to make .tsv to .txt, open it in Excel and save)
setwd("~/GitHub/abracadabra/patrick/")
#now lets make a relative abundance stacked bar chart
metadata <- read.table("temp_map.txt",
header=T,
sep=',',
check.names=F,
comment='',
quote = " ",
row=1)
#now lets make a relative abundance stacked bar chart
metadata <- read.table("../data/map/temp_map.txt",
header=T,
sep=',',
check.names=F,
comment='',
quote = " ",
row=1)
#now lets make a relative abundance stacked bar chart
metadata <- read.table("../data/map/temp_map.txt",
header=T,
sep='\t',
check.names=F,
comment='')
#now lets make a relative abundance stacked bar chart
metadata <- read.table("../data/map/temp_map.txt",
header=T,
sep='\t',
check.names=F,
comment='')
#now lets make a relative abundance stacked bar chart
metadata <- read.delim("../data/map/temp_map.txt",
header=T,
sep='\t',
check.names=F,
comment='')
View(metadata)
#this is the normalized table
otu <- read.table("../data/processed_tax/taxonomy_norm_s.txt",
comment="",
header=TRUE,
sep="\t",
as.is=TRUE,
check.names=F,
row=1)
#this can be changed to what level you want
level = 6
#making an empty table for new names
names_split <- array(dim=c(length(otu$taxonomy),level))
#make a list of current otu names
otu_names <- as.character(otu$taxonomy)
View(names_split)
#for loops that splits the names in otu_names, makes all the levels as separate strings
for (i in 1:length(otu_names)){
names_split[i,] <- head(strsplit(otu_names[i], ";", fixed=T)[[1]], n=level)
}
View(otu)
